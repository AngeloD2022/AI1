package com.angelod.ind2.nn;public class Layer {    private double[][] weights;    private double biases[];    private int inputCount;    private int outputCount;    private double[] results;    public Layer(int inputCount, int outputCount) {        this.inputCount = inputCount;        this.outputCount = outputCount;        weights = new double[inputCount][outputCount];        for (int x = 0; x < weights.length; x++) {            for (int y = 0; y < weights[0].length; y++) {                weights[x][y] = Math.sqrt(-2 * Math.log(Math.random())) * (Math.round(Math.random()) == 1 ? -1 : 1);            }            System.out.println("WEIGHTS");            dumpArray(weights[x]);        }        biases = new double[outputCount];        for (int i = 0; i < outputCount; i++) {            biases[i] = Math.sqrt(-2 * Math.log(Math.random())) * (Math.round(Math.random()) == 1 ? -1 : 1);        }        results = new double[outputCount];    }    double[] results(double[] inputs) {        System.out.println("Inputs:");        dumpArray(inputs);        System.out.println("pre-sigmoid:");        for (int out = 0; out < outputCount; out++) {            for (int ins = 0; ins < inputCount; ins++) {                results[out] += weights[ins][out] * inputs[ins];            }            System.out.print(results[out]);            System.out.print("  ");            results[out] = Calc.sigmoid(results[out] + biases[out]);        }        System.out.println();        System.out.println("final");        dumpArray(results);        return results;    }    public static void dumpArray(double[] in) {        for (int i = 0; i < in.length; i++) {            System.out.print(in[i]);            System.out.print("   ");        }        System.out.println();    }    public int getInputCount() {        return inputCount;    }    public int getOutputCount() {        return outputCount;    }}